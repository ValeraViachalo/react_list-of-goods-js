{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortField","setSortField","reverseField","setReverseField","visibleGoods","goods","preparedGoods","sort","element1","element2","localeCompare","reverse","getPreparedGoods","className","onClick","type","cn","map","element","ReactDOM","render","document","getElementById"],"mappings":"iPAMMA,EAAsB,OACtBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,QACA,QACA,OACA,QACA,MACA,YACA,UA4BK,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACMC,EA5BR,SAA0BC,EAA1B,GAA+D,IAA5BL,EAA2B,EAA3BA,UAAWE,EAAgB,EAAhBA,aACtCI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAUC,GAC5B,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAASR,GAAaS,EAAST,GAExC,KAAKL,EACH,OAAOa,EAASE,cAAcD,GAEhC,QACE,OAAO,MAKXP,GACFI,EAAcK,UAGTL,EAMcM,CAAiBf,EACpC,CAAEG,YAAWE,iBAEf,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMb,EAAaN,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,iBACZ,CAAE,WAAYhB,IAAcL,IAJhC,iCASA,wBACEmB,QAAS,kBAAMb,EAAaL,IAC5BmB,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,WAAYhB,IAAcJ,IAJhC,4BASA,wBACEkB,QAAS,kBAAMX,GAAiBD,IAChCa,KAAK,SACLF,UAAWG,IAAG,oBACZ,CAAE,YAAad,IAJnB,sBAUGF,GAAaE,IACZ,wBACEY,QAAS,WACPX,EAAgB,IAChBF,EAAa,KAEfc,KAAK,SACLF,UAAU,4BANZ,sBAcN,6BACGT,EAAaa,KAAI,SAAAC,GAAO,OACvB,oBAAI,UAAQ,OAAZ,SAAoBA,aClG9BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d4752e64.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport cn from 'classnames';\nimport { useState } from 'react';\n\nconst SORT_FIELD_ALPHABET = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Ice cream',\n  'Garlic',\n];\n\nfunction getPreparedGoods(goods, { sortField, reverseField }) {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((element1, element2) => {\n      switch (sortField) {\n        case SORT_FIELD_LENGTH:\n          return element1[sortField] - element2[sortField];\n\n        case SORT_FIELD_ALPHABET:\n          return element1.localeCompare(element2);\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverseField) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [reverseField, setReverseField] = useState('');\n  const visibleGoods = getPreparedGoods(goodsFromServer,\n    { sortField, reverseField });\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info',\n            { 'is-light': sortField !== SORT_FIELD_ALPHABET })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success',\n            { 'is-light': sortField !== SORT_FIELD_LENGTH })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setReverseField(!reverseField)}\n          type=\"button\"\n          className={cn('button is-warning',\n            { 'is-light': !reverseField })}\n        >\n          Reverse\n        </button>\n\n        {\n          (sortField || reverseField) && (\n            <button\n              onClick={() => {\n                setReverseField('');\n                setSortField('');\n              }}\n              type=\"button\"\n              className=\"button is-danger is-light\"\n            >\n              Reset\n            </button>\n          )\n        }\n      </div>\n\n      <ul>\n        {visibleGoods.map(element => (\n          <li data-cy=\"Good\">{element}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}